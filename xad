label = $item['label'];
			$title = $item['title'];
			$name = $title;
			if (!$name) { $name = $label; }
			if (!$name) { $name = $filename; }
			// if (count($artist)) {
				// $artist = $artist[0];
				// if ($artist) {
					// $name = '['.$artist.'] '.str_replace($artist,'',$name);
				// }
			// }
			// $name = str_replace(['[B]','[/B]'],'**',$name);
			$name = kodiTitle($name,$artist,$file);
	
			if ($type == 'directory' && startsWith($item['title'],"Next page") && startsWith($file,'plugin://plugin.video.youtube/kodion/search/query')) {
				$nextpage = $file;
			} else if ($type == 'directory') {
				$ndir[] = $item;
			}
			if (startsWith($file,'plugin://plugin.video.youtube/play/?video_id=')) {
				$ndir[] = $item;
				if ($type == 'file') {
					$vid = explode('=',$file)[1];
					$ytmap[$vid] = $name;
					// $ndir[] = $item;
				}
			}
		}
		$page++;
		// $nextpage = array_values(array_filter($dir,fn($val) =>  $val['filetype'] == 'directory' && startsWith($val['title'],"Next page")))[0];
		if (!$nextpage) {
			break;
		}
		$npath = $nextpage;
		$json = '{"jsonrpc":"2.0","method":"Files.GetDirectory","id":"1743603938944","params":{"directory":"'.$npath.'","media":"video","properties":["title","file","artist","duration","runtime","playcount","mimetype","thumbnail","dateadded"],"sort":{"method":"none","order":"ascending"}}}';
		$dir = $_Kodi->sendJson($json);
		var_dump($page);
	}
	file_put_contents('ndir.json',json_encode($ndir, JSON_PRETTY_PRINT));
	file_put_contents('ytmap.json',json_encode($ytmap, JSON_PRETTY_PRINT));
	var_dump($ytmap);
	return $ndir;

}

$kodi = [];
$kodi['paths'] = null;
$kodi['sources'] = null;
$kodi['hist'] = ['sources'];
$kodi['playrandom'] = false;
$kodi['queuerandom'] = false;
$kodi['playing'] = null;
$kodi['playfile'] = null;
$kodi['playfilename'] = null;
$kodi['playpic'] = null;
// $kodi['movies'] = [];

function kodiTitle($name,$artist = [],$file = false) {
	if (is_array($artist) && count($artist)) {
		$artist = preg_replace("/ - Topic$/",'',$artist[0]);
		if ($artist) {
			$name = str_replace($artist,'',$name);
			// $name = $artist.$name;
		} else {
			$artist = false;
		}
	} else {
		$artist = false;
	}
	$name = str_replace(['[B]','[/B]'],'**',$name);

	$vid = false;
	if ($file && startsWith($file,'plugin://plugin.video.youtube/play/?video_id=')) {
		$vid = explode('=',$file)[1];
	}
	if ($vid) { 
		// preg_match('/^[\x{0590}-\x{05fe} ]+$/u',$name,$matches);
		preg_match("/\\\u[0-f].../",trim(json_encode($name),'"'),$matches);
		if (count($matches) || strpos($name,':')) {
			$name = " $name [$vid](<https://www.youtube.com/watch?v=$vid>)";
		} else {
			$name = " [$name](<https://www.youtube.com/watch?v=$vid>)";
		}
	}

	if ($artist) {
		$name = '['.$artist.']'.$name;
	}
	return $name;	
}

function secsToTimeArray($secs,$assoc = false) {
	// $newtime = explode(':',date('H:i:s',strtotime("midnight + $secs seconds")));
	$newtime = explode(':',gmdate("H:i:s", $secs));
	if ($assoc) { return ['hours'=>intval($newtime[0]),'minutes'=>intval($newtime[1]),'seconds' => intval($newtime[2]),'milliseconds'=>00]; }
	return $newtime;
}

function usortLabel($a, $b) { return (preg_replace('/[^a-z\d ]/i','',$a['filetype'].$a['label']) <=> preg_replace('/[^a-z\d ]/i','',$b['filetype'].$b['label'])); }

function renderDir($dirs,$curpath,$curitem = null,$paginate = false) {
	if ($curitem !== null) { $curitem = stripslashes($curitem); }
	
	// if (isset($dirs['error'])) {
		// var_dump($dirs['error'],$path);
		// return;
	// }
	// if (!kodiError($dirs)) { return false; }
	if ($kerr = kodiError($dirs)) { return $kerr; }

	$files = $dirs;
	if (isset($dirs['result'])) {
		$files = $dirs['result']['files'];
	} else	if (isset($dirs['files'])) {
		$files = $dirs['files'];
	}
	global $kodi;
	$kodi['plmode'] = "files";

	if (startsWith($curpath,'plugin://plugin.video.youtube/')) {
		$kodi['plmode'] = "yt";
		// $last = $dirs[array_key_last($dirs)];
		// if ($isset($last) && $last['filetype'] == 'directory' && startsWith($last['title'],"Next page")) {
		if (!isset($files['ytparsed'])) {
			if (!$files = cacheYTNames($files)) { return "E4744"; }
			unset($files['ytparsed']);
		// } else {
			// unset($files['ytparsed']);
			// $files = $dirs;
		}
	}
	if (isset($files['ytparsed'])) {
		unset($files['ytparsed']);
	}

	$dirs = $files;
	if ($curpath == 'bookmarks') {
		$kodi['plmode'] = "bookmarks";
	}

	if (	$kodi['plmode'] == 'files') {
		var_dump(usort($dirs,'usortLabel'),$dirs);		
		file_put_contents('dirfiles.json',json_encode($dirs, JSON_PRETTY_PRINT));
		//exit;
	}

	global $nums;
	$play = '‚ñ∂';
	$pause = '‚è∏';
	// if (!isset($dirs['result'])) {
		// var_dump($dirs,'DIRS ERROR');
		// return false;
	// }
	// $dirs = $dirs['result']['files'];
	
	$kodi['path'] = $curpath;

	if (!count($kodi['hist']) || $kodi['hist'][array_key_last($kodi['hist'])] !== $curpath) {
		$kodi['hist'][] = $curpath;
	}
	if ($curpath == "sources" && $dirs[0]['label'] == "Video add-ons") { $paginate = true;array_shift($dirs); }
	$kodi['menu'] = [];
	$page = 0;
	if ($paginate) {
			$output[$page] = "";
	} else {
		// $output .= " $watched$key: $name $dur\n";
		$output = '';
	}



	if (!count($dirs)) {
		$output = '0 results';
	}
	
	$ic = 1;
	foreach ($dirs AS $key => $item) {
		$filename = $item['file'];
		$file = false;
		if (isset($item['mediapath'])) {
			$file = $item['mediapath'];
		}
		if (!$file) { $file = $filename; }
		$artist = [];
		if (isset($item['artist'])) {
			$artist = $item['artist'];
		}
		$title = $item['title'];
		$name = $item['label'];
		if (!$name) { $name = $title; }
		if (!$name) { $name = $filename; }
		$vid = false;
		$file = stripslashes($file);
		
		$name = kodiTitle($name,$artist,$file);

		$type = ($curpath == 'sources')?'directory':$item['filetype'];
		// $path = $item['file'];
		$path = stripslashes($file);
		$pic = $item['thumbnail'];
		if (!$name) { $name = $path; }
		$watchedbool = false;
		$watched = 'üî≤';
		if (isset($item['playcount']) && $item['playcount'] == 1) {
			$watchedbool = true;
			$watched = "‚úÖ";
		}
		$totaltime = '{}';
		if (isset($item['totaltime']))	{
			$totaltime = json_encode($item['totaltime']);
		}
		$dur = '';
		if (isset($item['runtime']))	{
			$totaltime = secsToTimeArray($item['runtime']);
			$dur = gmdate("H:i:s", $item['runtime']);
		}
		$resume = 0;
		if (isset($item['resume']) && is_numeric($item['resume']['position']) && $item['resume']['position'] > 0)	{
			var_dump('777777777777777777',$item['resume']['position']);
			$watched = $pause;
			if (!$dur && isset($item['resume']['total'])) {
				$totaltime = secsToTimeArray($item['resume']['total']);
				$dur = gmdate("H:i:s", $item['resume']['total']);
			}
			$resume = $item['resume']['position'];
			if ($dur) { 
				$dur = gmdate("H:i:s", $resume)." / ".$dur; 
			}	else { $dur = gmdate("H:i:s", $resume); }
		}
		if ($type == 'directory') {
			$watched = 'üìÅ';
		}
		if ($path == $curitem) {
			$watchedbool = 'playing';
			$watched = $play;
		}
		
		$code = '';
		if ($paginate) {
		}
		
		
		if ($paginate) {
			if ($ic >= 11) { $page++; $ic = 1;
				$code = $nums[$ic];
				$output[$page] = "$code $watched: $name $dur\n";
				//$ic++;
				//$output[$page] = "";
			} else {
				$code = $nums[$ic];
				$output[$page] .= "$code $watched: $name $dur\n";
			}
		} else {
			$output .= "$watched$key: $name $dur\n";
		}
		if (is_array($totaltime)) {$totaltime = json_encode($totaltime); }
		$kodi['menu'][$key] = [$type,$path,$watchedbool,$name,intval($resume),$totaltime,$code,[$page,$ic]];
		$ic++;
	}
	file_put_contents('menu.json',$curitem."\n\n".json_encode($kodi['menu'], JSON_PRETTY_PRINT));
	return $output;
}

$nums = ["0Ô∏è‚É£","1Ô∏è‚É£","2Ô∏è‚É£","3Ô∏è‚É£","4Ô∏è‚É£","5Ô∏è‚É£","6Ô∏è‚É£","7Ô∏è‚É£","8Ô∏è‚É£","9Ô∏è‚É£","üîü"];

$ssaveron = false;

function renderQueue($items,$curitem = null) {
	$play = '‚ñ∂';
	global $ssaveron;
	global $ytmap;
	global $kodi;
	$kodi['plmode'] = "queue";
	$ssaveron = false;
	if (!isset($items['result'])) {
		var_dump($items,'queue render ERROR');
		return false;
	}
	$items = $items['result']['items'];
	
	// $kodi['path'] = $path;
	$kodi['hist'][] = "queue";
	// $kodi['menu'] = [];
	$kodi['queue'] = [];
	$output = "            **__Queue List__** \n";
	if (!count($items)) {
		$output .= '0 results';
	}
	//var_dump('9999999999999999999999999999999999999999999999999999$ytmap');
	var_dump($ytmap);
	foreach ($items AS $key => $item) {
		if (isset($item['mediapath']) && $item['mediapath']) {
			$path = $item['mediapath'];
		} else {
			$path = $item['file'];
		}
		$path = stripslashes($path);
		// $ssaver = 'http://sylvan.apple.com/Videos';
		// if ( $ssaveron = startsWith($path,$ssaver)) { continue; }

		var_dump('AAAAAAAAAAAAAAAAAAAAA',$key,$curitem,$path);
		

		$name = $item['title'];
		$label = $item['label'];
		if (!$name) {	$name = $item['label'];	}
		if (!$name) {	$name = $item['file'];	}
		if (startsWith($path,'plugin://plugin.video.youtube/play/?video_id=') ) {
			$vid = explode('=',$path)[1];
			if (isset($ytmap[$vid])) {
				$name = $ytmap[$vid];
			}
		// } else if (startsWith($path,'plugin:\/\/plugin.video.youtube\/play\/?video_id') && isset($ytmap[$path])) {
			// $name = $ytmap[addcslashes($path,'//')];
		}
		// $type = $item['filetype'];
		$pic = $item['thumbnail'];
		$watchedbool = false;
		$watched = 'üî≤';
		if (isset($item['playcount']) && $item['playcount'] == 1) {
			$watchedbool = true;
			$watched = "‚úÖ";
		}
		if ($path == $curitem) {
			$watchedbool = 'playing';
			$watched = $play;
		}
		// if ($type == 'directory') {
			// $watched = 'üìÅ';
		// }
		
		//$kodi['menu'][$key] = ['file',$path,$watchedbool,$name,intval($resume)];
		$kodi['queue'][$key] = ['file',$path,$watchedbool,$name,$pic];
		
		$output .= " $watched$key: $name \n";
	}
	file_put_contents('queuemenu.json',$curitem."\n\n".json_encode($kodi['queue'], JSON_PRETTY_PRINT));
	file_put_contents('queueitems.json',json_encode($items, JSON_PRETTY_PRINT));
	return $output;
}

function filterArrayByKeyValue($array, $key, $keyValue) {
  return array_filter($array, function($value) use ($key, $keyValue) {
    return $value[$key] == $keyValue; 
  });
}

$curpath = '';

function padInt($val) {
	return str_pad($val,2,'0',STR_PAD_LEFT);
}

//$_Kodi = null;
function connectKodi($verbose = false) {
	global $_Kodi;
	$IP = 'localhost:8088';
	sendMsg('380675774794956800',  "Connecting to $IP...");
	$_Kodi = new Kodi($IP);
	if (isset($_Kodi->error)) { 
		sendMsg('380675774794956800',  print_r($_Kodi->error,true));
	} else {
		sendMsg('380675774794956800',  "Connected to $IP");
	}
}

function fixKodiAudio() {
	global $kodi;
	if ((isset($kodi['playing']) && startsWith($kodi['playing'],'plugin://plugin.video.youtube/')) || (isset($kodi['path']) && startsWith($kodi['path'],'plugin://plugin.video.youtube/play/?video_id=') )) {
		var_dump("I sense youtube is afoot. dipping");
		return;
	}
	
	global $_Kodi;
	$json = '{"jsonrpc":"2.0","method":"Player.GetProperties","params":[1,["audiostreams","currentaudiostream"]],"id":9}';
	$props = $_Kodi->sendJson($json)['result'];
	if (!$props) { return "props error";	}
	if (isset($props['currentaudiostream']['language']) && $props['currentaudiostream']['language'] !== 'eng') {
		$engstreams = filterArra